from naoqi import ALProxy
import nao_2_1_1 as nao


def wave(ip, port):
    # Choregraphe bezier export in Python.
    # Choregraphe bezier export in Python.
    from naoqi import ALProxy
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append([0.96, 2, 3.2, 4.48, 5.36, 6.16, 6.88, 7.72])
    keys.append([[-0.200952, [3, -0.333333, 0], [3, 0.346667, 0]], [-0.200952, [3, -0.346667, 0], [3, 0.4, 0]], [-0.200952, [3, -0.4, 0], [3, 0.426667, 0]], [-0.200952, [3, -0.426667, 0], [3, 0.293333, 0]], [-0.200952, [3, -0.293333, 0], [3, 0.266667, 0]], [-0.200952, [3, -0.266667, 0], [3, 0.24, 0]], [-0.200952, [3, -0.24, 0], [3, 0.28, 0]], [-0.200952, [3, -0.28, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([0.96, 2, 3.2, 4.48, 5.36, 6.16, 6.88, 7.72])
    keys.append([[0.00766993, [3, -0.333333, 0], [3, 0.346667, 0]], [0.00153399, [3, -0.346667, 0.00166182], [3, 0.4, -0.00191748]], [-0.00306797, [3, -0.4, 0], [3, 0.426667, 0]], [-0.00306797, [3, -0.426667, 0], [3, 0.293333, 0]], [-0.00306797, [3, -0.293333, 0], [3, 0.266667, 0]], [-0.00306797, [3, -0.266667, 0], [3, 0.24, 0]], [-0.00306797, [3, -0.24, 0], [3, 0.28, 0]], [0.00766992, [3, -0.28, 0], [3, 0, 0]]])

    names.append("HipPitch")
    times.append([0.96, 2, 3.2, 4.48, 5.36, 6.16, 6.88, 7.72])
    keys.append([[-0.0337477, [3, -0.333333, 0], [3, 0.346667, 0]], [-0.0337477, [3, -0.346667, 0], [3, 0.4, 0]], [-0.0337477, [3, -0.4, 0], [3, 0.426667, 0]], [-0.0337477, [3, -0.426667, 0], [3, 0.293333, 0]], [-0.0337477, [3, -0.293333, 0], [3, 0.266667, 0]], [-0.0337477, [3, -0.266667, 0], [3, 0.24, 0]], [-0.0337477, [3, -0.24, 0], [3, 0.28, 0]], [-0.0337477, [3, -0.28, 0], [3, 0, 0]]])

    names.append("HipRoll")
    times.append([0.96, 2, 3.2, 4.48, 5.36, 6.16, 6.88, 7.72])
    keys.append([[-0.0184078, [3, -0.333333, 0], [3, 0.346667, 0]], [-0.0122719, [3, -0.346667, -0.00356104], [3, 0.4, 0.00410889]], [0.00460196, [3, -0.4, 0], [3, 0.426667, 0]], [0.00460196, [3, -0.426667, 0], [3, 0.293333, 0]], [0.00460196, [3, -0.293333, 0], [3, 0.266667, 0]], [0.00460196, [3, -0.266667, 0], [3, 0.24, 0]], [-0.00766993, [3, -0.24, 0.00353996], [3, 0.28, -0.00412996]], [-0.0184078, [3, -0.28, 0], [3, 0, 0]]])

    names.append("KneePitch")
    times.append([0.96, 2, 3.2, 4.48, 5.36, 6.16, 6.88, 7.72])
    keys.append([[0.00766993, [3, -0.333333, 0], [3, 0.346667, 0]], [0.0184078, [3, -0.346667, 0], [3, 0.4, 0]], [0.0184078, [3, -0.4, 0], [3, 0.426667, 0]], [0.0184078, [3, -0.426667, 0], [3, 0.293333, 0]], [0.0184078, [3, -0.293333, 0], [3, 0.266667, 0]], [0.0184078, [3, -0.266667, 0], [3, 0.24, 0]], [0.0184078, [3, -0.24, 0], [3, 0.28, 0]], [0.00766992, [3, -0.28, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([0.96, 2, 3.2, 4.48, 5.36, 6.16, 6.88, 7.72])
    keys.append([[-0.523088, [3, -0.333333, 0], [3, 0.346667, 0]], [-0.523088, [3, -0.346667, 0], [3, 0.4, 0]], [-0.523088, [3, -0.4, 0], [3, 0.426667, 0]], [-0.523088, [3, -0.426667, 0], [3, 0.293333, 0]], [-0.523088, [3, -0.293333, 0], [3, 0.266667, 0]], [-0.523088, [3, -0.266667, 0], [3, 0.24, 0]], [-0.523088, [3, -0.24, 0], [3, 0.28, 0]], [-0.523087, [3, -0.28, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([0.96, 2, 3.2, 4.48, 5.36, 6.16, 6.88, 7.72])
    keys.append([[-1.23179, [3, -0.333333, 0], [3, 0.346667, 0]], [-1.23179, [3, -0.346667, 0], [3, 0.4, 0]], [-1.23179, [3, -0.4, 0], [3, 0.426667, 0]], [-1.23179, [3, -0.426667, 0], [3, 0.293333, 0]], [-1.23179, [3, -0.293333, 0], [3, 0.266667, 0]], [-1.23179, [3, -0.266667, 0], [3, 0.24, 0]], [-1.23179, [3, -0.24, 0], [3, 0.28, 0]], [-1.23179, [3, -0.28, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([0.96, 2, 3.2, 4.48, 5.36, 6.16, 6.88, 7.72])
    keys.append([[0.599297, [3, -0.333333, 0], [3, 0.346667, 0]], [0.599297, [3, -0.346667, 0], [3, 0.4, 0]], [0.599297, [3, -0.4, 0], [3, 0.426667, 0]], [0.599297, [3, -0.426667, 0], [3, 0.293333, 0]], [0.599297, [3, -0.293333, 0], [3, 0.266667, 0]], [0.599297, [3, -0.266667, 0], [3, 0.24, 0]], [0.599297, [3, -0.24, 0], [3, 0.28, 0]], [0.599297, [3, -0.28, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([0.96, 2, 3.2, 4.48, 5.36, 6.16, 6.88, 7.72])
    keys.append([[1.57233, [3, -0.333333, 0], [3, 0.346667, 0]], [1.5708, [3, -0.346667, 0.00153398], [3, 0.4, -0.00176998]], [1.55699, [3, -0.4, 0], [3, 0.426667, 0]], [1.55699, [3, -0.426667, 0], [3, 0.293333, 0]], [1.55699, [3, -0.293333, 0], [3, 0.266667, 0]], [1.55699, [3, -0.266667, 0], [3, 0.24, 0]], [1.55699, [3, -0.24, 0], [3, 0.28, 0]], [1.57233, [3, -0.28, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([0.96, 2, 3.2, 4.48, 5.36, 6.16, 6.88, 7.72])
    keys.append([[0.141126, [3, -0.333333, 0], [3, 0.346667, 0]], [0.141126, [3, -0.346667, 0], [3, 0.4, 0]], [0.141126, [3, -0.4, 0], [3, 0.426667, 0]], [0.141126, [3, -0.426667, 0], [3, 0.293333, 0]], [0.141126, [3, -0.293333, 0], [3, 0.266667, 0]], [0.141126, [3, -0.266667, 0], [3, 0.24, 0]], [0.141126, [3, -0.24, 0], [3, 0.28, 0]], [0.141126, [3, -0.28, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([0.96, 2, 3.2, 4.48, 5.36, 6.16, 6.88, 7.72])
    keys.append([[0.0122299, [3, -0.333333, 0], [3, 0.346667, 0]], [0.0122299, [3, -0.346667, 0], [3, 0.4, 0]], [0.0122299, [3, -0.4, 0], [3, 0.426667, 0]], [0.0122299, [3, -0.426667, 0], [3, 0.293333, 0]], [0.0122299, [3, -0.293333, 0], [3, 0.266667, 0]], [0.0122299, [3, -0.266667, 0], [3, 0.24, 0]], [0.0122299, [3, -0.24, 0], [3, 0.28, 0]], [0.0122299, [3, -0.28, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([0.96, 2, 3.2, 4.48, 5.36, 6.16, 6.88, 7.72])
    keys.append([[0.518486, [3, -0.333333, 0], [3, 0.346667, 0]], [0.420311, [3, -0.346667, 0.0280134], [3, 0.4, -0.0323232]], [0.337476, [3, -0.4, 0], [3, 0.426667, 0]], [1.56207, [3, -0.426667, 0], [3, 0.293333, 0]], [0.555301, [3, -0.293333, 0], [3, 0.266667, 0]], [1.14435, [3, -0.266667, 0], [3, 0.24, 0]], [0.385029, [3, -0.24, 0], [3, 0.28, 0]], [0.518485, [3, -0.28, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([0.96, 2, 3.2, 4.48, 5.36, 6.16, 6.88, 7.72])
    keys.append([[1.22105, [3, -0.333333, 0], [3, 0.346667, 0]], [0.530757, [3, -0.346667, 0], [3, 0.4, 0]], [0.543029, [3, -0.4, 0], [3, 0.426667, 0]], [0.527689, [3, -0.426667, 0], [3, 0.293333, 0]], [0.527689, [3, -0.293333, 0], [3, 0.266667, 0]], [0.541495, [3, -0.266667, 0], [3, 0.24, 0]], [0.527689, [3, -0.24, 0], [3, 0.28, 0]], [1.22105, [3, -0.28, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([0.96, 2, 3.2, 4.48, 5.36, 6.16, 6.88, 7.72])
    keys.append([[0.592267, [3, -0.333333, 0], [3, 0.346667, 0]], [0.490334, [3, -0.346667, 0], [3, 0.4, 0]], [0.685413, [3, -0.4, 0], [3, 0.426667, 0]], [0.504394, [3, -0.426667, 0], [3, 0.293333, 0]], [0.591388, [3, -0.293333, -0.019639], [3, 0.266667, 0.0178537]], [0.616872, [3, -0.266667, 0], [3, 0.24, 0]], [0.490334, [3, -0.24, 0], [3, 0.28, 0]], [0.592267, [3, -0.28, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([0.96, 2, 3.2, 4.48, 5.36, 6.16, 6.88, 7.72])
    keys.append([[1.56619, [3, -0.333333, 0], [3, 0.346667, 0]], [1.25019, [3, -0.346667, 0.316], [3, 0.4, -0.364615]], [-0.871301, [3, -0.4, 0], [3, 0.426667, 0]], [-0.848291, [3, -0.426667, 0], [3, 0.293333, 0]], [-0.848291, [3, -0.293333, 0], [3, 0.266667, 0]], [-0.903515, [3, -0.266667, 0], [3, 0.24, 0]], [0.793068, [3, -0.24, -0.379955], [3, 0.28, 0.443281]], [1.56619, [3, -0.28, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([0.96, 2, 3.2, 4.48, 5.36, 6.16, 6.88, 7.72])
    keys.append([[-0.139592, [3, -0.333333, 0], [3, 0.346667, 0]], [-0.831418, [3, -0.346667, 0.158347], [3, 0.4, -0.182708]], [-1.16276, [3, -0.4, 0], [3, 0.426667, 0]], [-0.722505, [3, -0.426667, 0], [3, 0.293333, 0]], [-1.33763, [3, -0.293333, 0], [3, 0.266667, 0]], [-0.477068, [3, -0.266667, 0], [3, 0.24, 0]], [-1.01243, [3, -0.24, 0], [3, 0.28, 0]], [-0.139592, [3, -0.28, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([0.96, 2, 3.2, 4.48, 5.36, 6.16, 6.88, 7.72])
    keys.append([[-0.00924587, [3, -0.333333, 0], [3, 0.346667, 0]], [0.788434, [3, -0.346667, 0], [3, 0.4, 0]], [-0.00924587, [3, -0.4, 0], [3, 0.426667, 0]], [0.523052, [3, -0.426667, 0], [3, 0.293333, 0]], [0.0459781, [3, -0.293333, 0], [3, 0.266667, 0]], [0.0966001, [3, -0.266667, -0.050622], [3, 0.24, 0.0455598]], [0.429478, [3, -0.24, 0], [3, 0.28, 0]], [-0.00924586, [3, -0.28, 0], [3, 0, 0]]])

    try:
    # uncomment the following line and modify the IP if you use this script outside Choregraphe.
    # motion = ALProxy("ALMotion", IP, 9559)
        motion = ALProxy("ALMotion", ip, port)
        motion.angleInterpolationBezier(names, times, keys)
    except BaseException, err:
        print err


def join_turn(ip, port):

    # Choregraphe bezier export in Python.
    from naoqi import ALProxy
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append([0.96, 1.92, 2.68, 3.68])
    keys.append([[-0.208622, [3, -0.333333, 0], [3, 0.32, 0]], [-0.197884, [3, -0.32, 0], [3, 0.253333, 0]], [-0.197884, [3, -0.253333, 0], [3, 0.333333, 0]], [-0.197884, [3, -0.333333, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([0.96, 1.92, 2.68, 3.68])
    keys.append([[0.00613594, [3, -0.333333, 0], [3, 0.32, 0]], [-0.00460196, [3, -0.32, 0], [3, 0.253333, 0]], [-0.00460196, [3, -0.253333, 0], [3, 0.333333, 0]], [-0.00460196, [3, -0.333333, 0], [3, 0, 0]]])

    names.append("HipPitch")
    times.append([0.96, 1.92, 2.68, 3.68])
    keys.append([[-0.0306797, [3, -0.333333, 0], [3, 0.32, 0]], [-0.0306797, [3, -0.32, 0], [3, 0.253333, 0]], [-0.0306797, [3, -0.253333, 0], [3, 0.333333, 0]], [-0.0306797, [3, -0.333333, 0], [3, 0, 0]]])

    names.append("HipRoll")
    times.append([0.96, 1.92, 2.68, 3.68])
    keys.append([[-0.0184078, [3, -0.333333, 0], [3, 0.32, 0]], [-0.00306797, [3, -0.32, 0], [3, 0.253333, 0]], [-0.00306797, [3, -0.253333, 0], [3, 0.333333, 0]], [-0.00306797, [3, -0.333333, 0], [3, 0, 0]]])

    names.append("KneePitch")
    times.append([0.96, 1.92, 2.68, 3.68])
    keys.append([[0.00766993, [3, -0.333333, 0], [3, 0.32, 0]], [-0.00613594, [3, -0.32, 0], [3, 0.253333, 0]], [-0.00613594, [3, -0.253333, 0], [3, 0.333333, 0]], [-0.00613594, [3, -0.333333, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([0.96, 1.92, 2.68, 3.68])
    keys.append([[-0.523088, [3, -0.333333, 0], [3, 0.32, 0]], [-0.523088, [3, -0.32, 0], [3, 0.253333, 0]], [-0.523088, [3, -0.253333, 0], [3, 0.333333, 0]], [-0.523088, [3, -0.333333, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([0.96, 1.92, 2.68, 3.68])
    keys.append([[-1.22872, [3, -0.333333, 0], [3, 0.32, 0]], [-1.22872, [3, -0.32, 0], [3, 0.253333, 0]], [-1.22872, [3, -0.253333, 0], [3, 0.333333, 0]], [-1.22872, [3, -0.333333, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([0.96, 1.92, 2.68, 3.68])
    keys.append([[0.599297, [3, -0.333333, 0], [3, 0.32, 0]], [0.599297, [3, -0.32, 0], [3, 0.253333, 0]], [0.599297, [3, -0.253333, 0], [3, 0.333333, 0]], [0.599297, [3, -0.333333, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([0.96, 1.92, 2.68, 3.68])
    keys.append([[1.56006, [3, -0.333333, 0], [3, 0.32, 0]], [1.56006, [3, -0.32, 0], [3, 0.253333, 0]], [1.56006, [3, -0.253333, 0], [3, 0.333333, 0]], [1.56006, [3, -0.333333, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([0.96, 1.92, 2.68, 3.68])
    keys.append([[0.145728, [3, -0.333333, 0], [3, 0.32, 0]], [0.145728, [3, -0.32, 0], [3, 0.253333, 0]], [0.145728, [3, -0.253333, 0], [3, 0.333333, 0]], [0.145728, [3, -0.333333, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([0.96, 1.92, 2.68, 3.68])
    keys.append([[0.0122299, [3, -0.333333, 0], [3, 0.32, 0]], [0.0122299, [3, -0.32, 0], [3, 0.253333, 0]], [0.0122299, [3, -0.253333, 0], [3, 0.333333, 0]], [0.0122299, [3, -0.333333, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([0.96, 1.92, 2.68, 3.68])
    keys.append([[0.516952, [3, -0.333333, 0], [3, 0.32, 0]], [0.394233, [3, -0.32, 0], [3, 0.253333, 0]], [0.658078, [3, -0.253333, 0], [3, 0.333333, 0]], [0.549165, [3, -0.333333, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([0.96, 1.92, 2.68, 3.68])
    keys.append([[1.22258, [3, -0.333333, 0], [3, 0.32, 0]], [1.24559, [3, -0.32, 0], [3, 0.253333, 0]], [0.754719, [3, -0.253333, 0], [3, 0.333333, 0]], [0.754719, [3, -0.333333, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([0.96, 1.92, 2.68, 3.68])
    keys.append([[0.59051, [3, -0.333333, 0], [3, 0.32, 0]], [0.59051, [3, -0.32, 0], [3, 0.253333, 0]], [0.59051, [3, -0.253333, 0], [3, 0.333333, 0]], [0.59051, [3, -0.333333, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([0.96, 1.92, 2.68, 3.68])
    keys.append([[1.55852, [3, -0.333333, 0], [3, 0.32, 0]], [0.898913, [3, -0.32, 0], [3, 0.253333, 0]], [0.92499, [3, -0.253333, -0.0260777], [3, 0.333333, 0.0343128]], [1.32383, [3, -0.333333, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([0.96, 1.92, 2.68, 3.68])
    keys.append([[-0.14266, [3, -0.333333, 0], [3, 0.32, 0]], [-0.685689, [3, -0.32, 0], [3, 0.253333, 0]], [-0.274583, [3, -0.253333, -0.0746305], [3, 0.333333, 0.098198]], [-0.167204, [3, -0.333333, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([0.96, 1.92, 2.68, 3.68])
    keys.append([[-0.0107799, [3, -0.333333, 0], [3, 0.32, 0]], [0.7869, [3, -0.32, 0], [3, 0.253333, 0]], [0.688724, [3, -0.253333, 0.098176], [3, 0.333333, -0.129179]], [0.00302601, [3, -0.333333, 0], [3, 0, 0]]])

    try:
    # uncomment the following line and modify the IP if you use this script outside Choregraphe.
    # motion = ALProxy("ALMotion", IP, 9559)
        motion = ALProxy("ALMotion", ip, port)
        motion.angleInterpolationBezier(names, times, keys)
    except BaseException, err:
        print err



def gather_around(ip, port):
    # Choregraphe bezier export in Python.
    from naoqi import ALProxy
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append([0.96, 1.76, 2.48, 3.32, 4.2])
    keys.append([[-0.200952, [3, -0.333333, 0], [3, 0.266667, 0]], [-0.199418, [3, -0.266667, 0], [3, 0.24, 0]], [-0.200952, [3, -0.24, 0], [3, 0.28, 0]], [-0.200952, [3, -0.28, 0], [3, 0.293333, 0]], [-0.200952, [3, -0.293333, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([0.96, 1.76, 2.48, 3.32, 4.2])
    keys.append([[0, [3, -0.333333, 0], [3, 0.266667, 0]], [0, [3, -0.266667, 0], [3, 0.24, 0]], [0, [3, -0.24, 0], [3, 0.28, 0]], [0, [3, -0.28, 0], [3, 0.293333, 0]], [0, [3, -0.293333, 0], [3, 0, 0]]])

    names.append("HipPitch")
    times.append([0.96, 1.76, 2.48, 3.32, 4.2])
    keys.append([[-0.0260777, [3, -0.333333, 0], [3, 0.266667, 0]], [-0.0306797, [3, -0.266667, 0], [3, 0.24, 0]], [-0.0199418, [3, -0.24, 0], [3, 0.28, 0]], [-0.0199418, [3, -0.28, 0], [3, 0.293333, 0]], [-0.0260777, [3, -0.293333, 0], [3, 0, 0]]])

    names.append("HipRoll")
    times.append([0.96, 1.76, 2.48, 3.32, 4.2])
    keys.append([[-0.0122719, [3, -0.333333, 0], [3, 0.266667, 0]], [-0.0122719, [3, -0.266667, 0], [3, 0.24, 0]], [-0.00460196, [3, -0.24, 0], [3, 0.28, 0]], [-0.00460196, [3, -0.28, 0], [3, 0.293333, 0]], [-0.0122719, [3, -0.293333, 0], [3, 0, 0]]])

    names.append("KneePitch")
    times.append([0.96, 1.76, 2.48, 3.32, 4.2])
    keys.append([[0.00766992, [3, -0.333333, 0], [3, 0.266667, 0]], [0.00306797, [3, -0.266667, 0], [3, 0.24, 0]], [0.0138059, [3, -0.24, 0], [3, 0.28, 0]], [0.0138059, [3, -0.28, 0], [3, 0.293333, 0]], [0.00766992, [3, -0.293333, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([0.96, 1.76, 2.48, 3.32, 4.2])
    keys.append([[-0.51235, [3, -0.333333, 0], [3, 0.266667, 0]], [-0.523088, [3, -0.266667, 0], [3, 0.24, 0]], [-0.523088, [3, -0.24, 0], [3, 0.28, 0]], [-0.523088, [3, -0.28, 0], [3, 0.293333, 0]], [-0.51235, [3, -0.293333, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([0.96, 1.76, 2.48, 3.32, 4.2])
    keys.append([[-1.23946, [3, -0.333333, 0], [3, 0.266667, 0]], [-1.22872, [3, -0.266667, 0], [3, 0.24, 0]], [-1.22872, [3, -0.24, 0], [3, 0.28, 0]], [-1.22872, [3, -0.28, 0], [3, 0.293333, 0]], [-1.23946, [3, -0.293333, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([0.96, 1.76, 2.48, 3.32, 4.2])
    keys.append([[0.600176, [3, -0.333333, 0], [3, 0.266667, 0]], [0.599297, [3, -0.266667, 0], [3, 0.24, 0]], [0.599297, [3, -0.24, 0], [3, 0.28, 0]], [0.599297, [3, -0.28, 0], [3, 0.293333, 0]], [0.600176, [3, -0.293333, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([0.96, 1.76, 2.48, 3.32, 4.2])
    keys.append([[1.56466, [3, -0.333333, 0], [3, 0.266667, 0]], [1.56006, [3, -0.266667, 0], [3, 0.24, 0]], [1.56006, [3, -0.24, 0], [3, 0.28, 0]], [1.56006, [3, -0.28, 0], [3, 0.293333, 0]], [1.56466, [3, -0.293333, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([0.96, 1.76, 2.48, 3.32, 4.2])
    keys.append([[0.145728, [3, -0.333333, 0], [3, 0.266667, 0]], [0.14266, [3, -0.266667, 0], [3, 0.24, 0]], [0.14266, [3, -0.24, 0], [3, 0.28, 0]], [0.14266, [3, -0.28, 0], [3, 0.293333, 0]], [0.145728, [3, -0.293333, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([0.96, 1.76, 2.48, 3.32, 4.2])
    keys.append([[0.0137641, [3, -0.333333, 0], [3, 0.266667, 0]], [0.00916195, [3, -0.266667, 0], [3, 0.24, 0]], [0.0106959, [3, -0.24, 0], [3, 0.28, 0]], [0.0106959, [3, -0.28, 0], [3, 0.293333, 0]], [0.0137641, [3, -0.293333, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([0.96, 1.76, 2.48, 3.32, 4.2])
    keys.append([[0.518485, [3, -0.333333, 0], [3, 0.266667, 0]], [0.113515, [3, -0.266667, 0], [3, 0.24, 0]], [0.628932, [3, -0.24, 0], [3, 0.28, 0]], [0.628932, [3, -0.28, 0], [3, 0.293333, 0]], [0.518485, [3, -0.293333, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([0.96, 1.76, 2.48, 3.32, 4.2])
    keys.append([[1.23639, [3, -0.333333, 0], [3, 0.266667, 0]], [0.697961, [3, -0.266667, 0], [3, 0.24, 0]], [0.699495, [3, -0.24, 0], [3, 0.28, 0]], [0.688757, [3, -0.28, 0], [3, 0.293333, 0]], [1.23639, [3, -0.293333, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([0.96, 1.76, 2.48, 3.32, 4.2])
    keys.append([[0.598418, [3, -0.333333, 0], [3, 0.266667, 0]], [0.405097, [3, -0.266667, 0.0224565], [3, 0.24, -0.0202109]], [0.384886, [3, -0.24, 0.00784102], [3, 0.28, -0.00914785]], [0.35413, [3, -0.28, 0], [3, 0.293333, 0]], [0.598418, [3, -0.293333, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([0.96, 1.76, 2.48, 3.32, 4.2])
    keys.append([[1.56466, [3, -0.333333, 0], [3, 0.266667, 0]], [1.04464, [3, -0.266667, 0.146939], [3, 0.24, -0.132245]], [0.727107, [3, -0.24, 0.0420748], [3, 0.28, -0.0490873]], [0.67802, [3, -0.28, 0], [3, 0.293333, 0]], [1.56466, [3, -0.293333, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([0.96, 1.76, 2.48, 3.32, 4.2])
    keys.append([[-0.141126, [3, -0.333333, 0], [3, 0.266667, 0]], [-0.773126, [3, -0.266667, 0], [3, 0.24, 0]], [-0.690291, [3, -0.24, -0.082835], [3, 0.28, 0.0966408]], [-0.0368156, [3, -0.28, 0], [3, 0.293333, 0]], [-0.141126, [3, -0.293333, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([0.96, 1.76, 2.48, 3.32, 4.2])
    keys.append([[-0.0107799, [3, -0.333333, 0], [3, 0.266667, 0]], [1.47873, [3, -0.266667, 0], [3, 0.24, 0]], [1.15199, [3, -0.24, 0.128856], [3, 0.28, -0.150332]], [0.64117, [3, -0.28, 0.189288], [3, 0.293333, -0.198302]], [-0.0107799, [3, -0.293333, 0], [3, 0, 0]]])

    try:
    # uncomment the following line and modify the IP if you use this script outside Choregraphe.
    # motion = ALProxy("ALMotion", IP, 9559)
        motion = ALProxy("ALMotion", ip, port)
        motion.angleInterpolationBezier(names, times, keys)
    except BaseException, err:
        print err


def hide_eyes(ip, port):
    # Choregraphe bezier export in Python.
    from naoqi import ALProxy
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append([0.96, 1.8, 2.52, 3.36, 4.08, 5.48])
    keys.append([[-0.200952, [3, -0.333333, 0], [3, 0.28, 0]], [-0.200952, [3, -0.28, 0], [3, 0.24, 0]], [-0.200952, [3, -0.24, 0], [3, 0.28, 0]], [-0.200952, [3, -0.28, 0], [3, 0.24, 0]], [-0.200952, [3, -0.24, 0], [3, 0.466667, 0]], [-0.200952, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([0.96, 1.8, 2.52, 3.36, 4.08, 5.48])
    keys.append([[0, [3, -0.333333, 0], [3, 0.28, 0]], [0, [3, -0.28, 0], [3, 0.24, 0]], [0, [3, -0.24, 0], [3, 0.28, 0]], [0, [3, -0.28, 0], [3, 0.24, 0]], [0, [3, -0.24, 0], [3, 0.466667, 0]], [0, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("HipPitch")
    times.append([0.96, 1.8, 2.52, 3.36, 4.08, 5.48])
    keys.append([[-0.0138059, [3, -0.333333, 0], [3, 0.28, 0]], [-0.0138059, [3, -0.28, 0], [3, 0.24, 0]], [-0.0138059, [3, -0.24, 0], [3, 0.28, 0]], [-0.0138059, [3, -0.28, 0], [3, 0.24, 0]], [-0.0138059, [3, -0.24, 0], [3, 0.466667, 0]], [-0.0138059, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("HipRoll")
    times.append([0.96, 1.8, 2.52, 3.36, 4.08, 5.48])
    keys.append([[-0.0107379, [3, -0.333333, 0], [3, 0.28, 0]], [-0.0107379, [3, -0.28, 0], [3, 0.24, 0]], [-0.0107379, [3, -0.24, 0], [3, 0.28, 0]], [-0.0107379, [3, -0.28, 0], [3, 0.24, 0]], [-0.0107379, [3, -0.24, 0], [3, 0.466667, 0]], [-0.0107379, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("KneePitch")
    times.append([0.96, 1.8, 2.52, 3.36, 4.08, 5.48])
    keys.append([[0.0230098, [3, -0.333333, 0], [3, 0.28, 0]], [0.0230098, [3, -0.28, 0], [3, 0.24, 0]], [0.0230098, [3, -0.24, 0], [3, 0.28, 0]], [0.0230098, [3, -0.28, 0], [3, 0.24, 0]], [0.0230097, [3, -0.24, 0], [3, 0.466667, 0]], [0.0230097, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([0.96, 1.8, 2.52, 3.36, 4.08, 5.48])
    keys.append([[-0.51235, [3, -0.333333, 0], [3, 0.28, 0]], [-0.972544, [3, -0.28, 0.1875], [3, 0.24, -0.160714]], [-1.55699, [3, -0.24, 0], [3, 0.28, 0]], [-1.55392, [3, -0.28, 0], [3, 0.24, 0]], [-1.55392, [3, -0.24, 0], [3, 0.466667, 0]], [-0.51235, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([0.96, 1.8, 2.52, 3.36, 4.08, 5.48])
    keys.append([[-1.23946, [3, -0.333333, 0], [3, 0.28, 0]], [-1.3407, [3, -0.28, 0.055066], [3, 0.24, -0.0471994]], [-1.54625, [3, -0.24, 0], [3, 0.28, 0]], [-1.02163, [3, -0.28, -9.32106e-07], [3, 0.24, 7.98948e-07]], [-1.02163, [3, -0.24, 0], [3, 0.466667, 0]], [-1.23946, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([0.96, 1.8, 2.52, 3.36, 4.08, 5.48])
    keys.append([[0.599297, [3, -0.333333, 0], [3, 0.28, 0]], [0.599297, [3, -0.28, 0], [3, 0.24, 0]], [0.599297, [3, -0.24, 0], [3, 0.28, 0]], [0.703866, [3, -0.28, 0], [3, 0.24, 0]], [0.703866, [3, -0.24, 4.76837e-07], [3, 0.466667, -9.27183e-07]], [0.599297, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([0.96, 1.8, 2.52, 3.36, 4.08, 5.48])
    keys.append([[1.56466, [3, -0.333333, 0], [3, 0.28, 0]], [1.13821, [3, -0.28, 0.159691], [3, 0.24, -0.136878]], [0.674952, [3, -0.24, 0.18809], [3, 0.28, -0.219438]], [-0.0843689, [3, -0.28, 0], [3, 0.24, 0]], [-0.0843689, [3, -0.24, -7.49014e-08], [3, 0.466667, 1.45642e-07]], [1.56466, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([0.96, 1.8, 2.52, 3.36, 4.08, 5.48])
    keys.append([[0.145728, [3, -0.333333, 0], [3, 0.28, 0]], [0.14266, [3, -0.28, 0], [3, 0.24, 0]], [0.345146, [3, -0.24, 0], [3, 0.28, 0]], [0.0644271, [3, -0.28, 6.31114e-08], [3, 0.24, -5.40955e-08]], [0.0644271, [3, -0.24, 0], [3, 0.466667, 0]], [0.145728, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([0.96, 1.8, 2.52, 3.36, 4.08, 5.48])
    keys.append([[0.00916195, [3, -0.333333, 0], [3, 0.28, 0]], [-0.618244, [3, -0.28, 0.193284], [3, 0.24, -0.165672]], [-1.06771, [3, -0.24, 0.135228], [3, 0.28, -0.157766]], [-1.49723, [3, -0.28, 0], [3, 0.24, 0]], [-1.49723, [3, -0.24, -3.99474e-07], [3, 0.466667, 7.76755e-07]], [0.00916195, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([0.96, 1.8, 2.52, 3.36, 4.08, 5.48])
    keys.append([[0.518486, [3, -0.333333, 0], [3, 0.28, 0]], [0.825282, [3, -0.28, -0.18731], [3, 0.24, 0.160551]], [1.56207, [3, -0.24, 0], [3, 0.28, 0]], [1.47722, [3, -0.28, 0], [3, 0.24, 0]], [1.47722, [3, -0.24, 0], [3, 0.466667, 0]], [0.518485, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([0.96, 1.8, 2.52, 3.36, 4.08, 5.48])
    keys.append([[1.23792, [3, -0.333333, 0], [3, 0.28, 0]], [1.264, [3, -0.28, -0.0260775], [3, 0.24, 0.0223522]], [1.70118, [3, -0.24, 0], [3, 0.28, 0]], [1.06918, [3, -0.28, 0], [3, 0.24, 0]], [1.06919, [3, -0.24, -6.6579e-07], [3, 0.466667, 1.29459e-06]], [1.23792, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([0.96, 1.8, 2.52, 3.36, 4.08, 5.48])
    keys.append([[0.587873, [3, -0.333333, 0], [3, 0.28, 0]], [0.567663, [3, -0.28, 0.00552026], [3, 0.24, -0.00473166]], [0.557118, [3, -0.24, 0], [3, 0.28, 0]], [0.684534, [3, -0.28, 0], [3, 0.24, 0]], [0.684534, [3, -0.24, 2.98023e-07], [3, 0.466667, -5.7949e-07]], [0.587873, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([0.96, 1.8, 2.52, 3.36, 4.08, 5.48])
    keys.append([[1.56313, [3, -0.333333, 0], [3, 0.28, 0]], [1.106, [3, -0.28, 0.172081], [3, 0.24, -0.147498]], [0.604388, [3, -0.24, 0.187618], [3, 0.28, -0.218887]], [-0.113515, [3, -0.28, 0], [3, 0.24, 0]], [-0.113515, [3, -0.24, -1.66448e-08], [3, 0.466667, 3.23648e-08]], [1.56313, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([0.96, 1.8, 2.52, 3.36, 4.08, 5.48])
    keys.append([[-0.145728, [3, -0.333333, 0], [3, 0.28, 0]], [-0.121185, [3, -0.28, 0], [3, 0.24, 0]], [-0.197884, [3, -0.24, 0], [3, 0.28, 0]], [-0.00872665, [3, -0.28, 0], [3, 0.24, 0]], [-0.00872665, [3, -0.24, 0], [3, 0.466667, 0]], [-0.145728, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([0.96, 1.8, 2.52, 3.36, 4.08, 5.48])
    keys.append([[0.00302601, [3, -0.333333, 0], [3, 0.28, 0]], [0.317496, [3, -0.28, -0.0889326], [3, 0.24, 0.076228]], [0.498508, [3, -0.24, -0.144432], [3, 0.28, 0.168504]], [1.2563, [3, -0.28, 0], [3, 0.24, 0]], [1.2563, [3, -0.24, 2.66316e-07], [3, 0.466667, -5.17837e-07]], [0.00302602, [3, -0.466667, 0], [3, 0, 0]]])

    try:
    # uncomment the following line and modify the IP if you use this script outside Choregraphe.
    # motion = ALProxy("ALMotion", IP, 9559)
        motion = ALProxy("ALMotion", ip, port)
        motion.angleInterpolationBezier(names, times, keys)
    except BaseException, err:
        print err


def bow(ip, port):
    # Choregraphe bezier export in Python.
    from naoqi import ALProxy
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append([0.96, 2.88, 3.12, 5.56])
    keys.append([[-0.200952, [3, -0.333333, 0], [3, 0.64, 0]], [-0.00306797, [3, -0.64, 0], [3, 0.08, 0]], [-0.00306797, [3, -0.08, 4.16119e-09], [3, 0.813333, -4.23054e-08]], [-0.200952, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([0.96, 2.88, 3.12, 5.56])
    keys.append([[0, [3, -0.333333, 0], [3, 0.64, 0]], [0, [3, -0.64, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.813333, 0]], [0, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("HipPitch")
    times.append([0.96, 2.88, 3.12, 5.56])
    keys.append([[-0.0138059, [3, -0.333333, 0], [3, 0.64, 0]], [-0.981748, [3, -0.64, 0], [3, 0.08, 0]], [-0.981748, [3, -0.08, -1.99737e-07], [3, 0.813333, 2.03066e-06]], [-0.0138059, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("HipRoll")
    times.append([0.96, 2.88, 3.12, 5.56])
    keys.append([[-0.0107379, [3, -0.333333, 0], [3, 0.64, 0]], [-0.0107379, [3, -0.64, 0], [3, 0.08, 0]], [-0.0107379, [3, -0.08, 0], [3, 0.813333, 0]], [-0.0107379, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("KneePitch")
    times.append([0.96, 2.88, 3.12, 5.56])
    keys.append([[0.0337477, [3, -0.333333, 0], [3, 0.64, 0]], [0.282253, [3, -0.64, -2.66316e-06], [3, 0.08, 3.32895e-07]], [0.282253, [3, -0.08, 0], [3, 0.813333, 0]], [0.0337477, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([0.96, 2.88, 3.12, 5.56])
    keys.append([[-0.518486, [3, -0.333333, 0], [3, 0.64, 0]], [-0.0368156, [3, -0.64, -1.33158e-07], [3, 0.08, 1.66448e-08]], [-0.0368156, [3, -0.08, 0], [3, 0.813333, 0]], [-0.518485, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([0.96, 2.88, 3.12, 5.56])
    keys.append([[-1.24406, [3, -0.333333, 0], [3, 0.64, 0]], [-1.16122, [3, -0.64, -2.13053e-06], [3, 0.08, 2.66316e-07]], [-1.16122, [3, -0.08, 0], [3, 0.813333, 0]], [-1.24406, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([0.96, 2.88, 3.12, 5.56])
    keys.append([[0.598418, [3, -0.333333, 0], [3, 0.64, 0]], [0.579086, [3, -0.64, 4.76837e-07], [3, 0.08, -5.96046e-08]], [0.579086, [3, -0.08, 0], [3, 0.813333, 0]], [0.598418, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([0.96, 2.88, 3.12, 5.56])
    keys.append([[1.56313, [3, -0.333333, 0], [3, 0.64, 0]], [1.32076, [3, -0.64, 4.26106e-06], [3, 0.08, -5.32632e-07]], [1.32076, [3, -0.08, 0], [3, 0.813333, 0]], [1.56313, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([0.96, 2.88, 3.12, 5.56])
    keys.append([[0.151864, [3, -0.333333, 0], [3, 0.64, 0]], [0.00872665, [3, -0.64, 0], [3, 0.08, 0]], [0.00872665, [3, -0.08, 0], [3, 0.813333, 0]], [0.151864, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([0.96, 2.88, 3.12, 5.56])
    keys.append([[0.00762796, [3, -0.333333, 0], [3, 0.64, 0]], [-0.882092, [3, -0.64, 0], [3, 0.08, 0]], [-0.882091, [3, -0.08, -8.65527e-07], [3, 0.813333, 8.79953e-06]], [0.00762796, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([0.96, 2.88, 3.12, 5.56])
    keys.append([[0.516952, [3, -0.333333, 0], [3, 0.64, 0]], [0.51235, [3, -0.64, 0], [3, 0.08, 0]], [0.51235, [3, -0.08, -4.99343e-07], [3, 0.813333, 5.07665e-06]], [0.516951, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([0.96, 2.88, 3.12, 5.56])
    keys.append([[1.24252, [3, -0.333333, 0], [3, 0.64, 0]], [1.24866, [3, -0.64, -3.19579e-06], [3, 0.08, 3.99474e-07]], [1.24866, [3, -0.08, 0], [3, 0.813333, 0]], [1.24252, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([0.96, 2.88, 3.12, 5.56])
    keys.append([[0.587873, [3, -0.333333, 0], [3, 0.64, 0]], [0.578207, [3, -0.64, 2.86102e-06], [3, 0.08, -3.57628e-07]], [0.578207, [3, -0.08, 0], [3, 0.813333, 0]], [0.587873, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([0.96, 2.88, 3.12, 5.56])
    keys.append([[1.56159, [3, -0.333333, 0], [3, 0.64, 0]], [1.56159, [3, -0.64, 0], [3, 0.08, 0]], [1.56159, [3, -0.08, 0], [3, 0.813333, 0]], [1.56159, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([0.96, 2.88, 3.12, 5.56])
    keys.append([[-0.144194, [3, -0.333333, 0], [3, 0.64, 0]], [-0.184078, [3, -0.64, 3.06264e-06], [3, 0.08, -3.82829e-07]], [-0.184078, [3, -0.08, 0], [3, 0.813333, 0]], [-0.144194, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([0.96, 2.88, 3.12, 5.56])
    keys.append([[0.0199001, [3, -0.333333, 0], [3, 0.64, 0]], [0.032172, [3, -0.64, -2.99606e-07], [3, 0.08, 3.74507e-08]], [0.032172, [3, -0.08, 0], [3, 0.813333, 0]], [0.0199001, [3, -0.813333, 0], [3, 0, 0]]])

    try:
    # uncomment the following line and modify the IP if you use this script outside Choregraphe.
    # motion = ALProxy("ALMotion", IP, 9559)
        motion = ALProxy("ALMotion", ip, port)
        motion.angleInterpolationBezier(names, times, keys)
    except BaseException, err:
        print err

def point_to(ip, port):
    # Choregraphe bezier export in Python.
    from naoqi import ALProxy
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append([0.96, 2.08, 3.04, 3.76, 5.08])
    keys.append([[-0.20402, [3, -0.333333, 0], [3, 0.373333, 0]], [-0.20402, [3, -0.373333, 0], [3, 0.32, 0]], [-0.20402, [3, -0.32, 0], [3, 0.24, 0]], [-0.20402, [3, -0.24, 0], [3, 0.44, 0]], [-0.20402, [3, -0.44, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([0.96, 2.08, 3.04, 3.76, 5.08])
    keys.append([[-0.00153399, [3, -0.333333, 0], [3, 0.373333, 0]], [-0.615126, [3, -0.373333, 0.162169], [3, 0.32, -0.139002]], [-0.905049, [3, -0.32, 7.98948e-07], [3, 0.24, -5.99211e-07]], [-0.905049, [3, -0.24, 0], [3, 0.44, 0]], [-0.00153399, [3, -0.44, 0], [3, 0, 0]]])

    names.append("HipPitch")
    times.append([0.96, 2.08, 3.04, 3.76, 5.08])
    keys.append([[-0.0107379, [3, -0.333333, 0], [3, 0.373333, 0]], [0, [3, -0.373333, 0], [3, 0.32, 0]], [0, [3, -0.32, 0], [3, 0.24, 0]], [0, [3, -0.24, 0], [3, 0.44, 0]], [-0.0107379, [3, -0.44, 0], [3, 0, 0]]])

    names.append("HipRoll")
    times.append([0.96, 2.08, 3.04, 3.76, 5.08])
    keys.append([[-0.0107379, [3, -0.333333, 0], [3, 0.373333, 0]], [-0.0107379, [3, -0.373333, 0], [3, 0.32, 0]], [-0.0107379, [3, -0.32, 0], [3, 0.24, 0]], [-0.0107379, [3, -0.24, 0], [3, 0.44, 0]], [-0.0107379, [3, -0.44, 0], [3, 0, 0]]])

    names.append("KneePitch")
    times.append([0.96, 2.08, 3.04, 3.76, 5.08])
    keys.append([[0.0598252, [3, -0.333333, 0], [3, 0.373333, 0]], [0.0598252, [3, -0.373333, 0], [3, 0.32, 0]], [0.0598252, [3, -0.32, 0], [3, 0.24, 0]], [0.0598252, [3, -0.24, 0], [3, 0.44, 0]], [0.0598252, [3, -0.44, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([0.96, 2.08, 3.04, 3.76, 5.08])
    keys.append([[-0.0122719, [3, -0.333333, 0], [3, 0.373333, 0]], [-0.0122719, [3, -0.373333, 0], [3, 0.32, 0]], [-0.0122719, [3, -0.32, 0], [3, 0.24, 0]], [-0.0122719, [3, -0.24, 0], [3, 0.44, 0]], [-0.0122719, [3, -0.44, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([0.96, 2.08, 3.04, 3.76, 5.08])
    keys.append([[-1.16122, [3, -0.333333, 0], [3, 0.373333, 0]], [-1.16122, [3, -0.373333, 0], [3, 0.32, 0]], [-1.16122, [3, -0.32, 0], [3, 0.24, 0]], [-1.16122, [3, -0.24, 0], [3, 0.44, 0]], [-1.16122, [3, -0.44, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([0.96, 2.08, 3.04, 3.76, 5.08])
    keys.append([[0.579086, [3, -0.333333, 0], [3, 0.373333, 0]], [0.579086, [3, -0.373333, 0], [3, 0.32, 0]], [0.579086, [3, -0.32, 0], [3, 0.24, 0]], [0.579086, [3, -0.24, 0], [3, 0.44, 0]], [0.579086, [3, -0.44, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([0.96, 2.08, 3.04, 3.76, 5.08])
    keys.append([[1.36217, [3, -0.333333, 0], [3, 0.373333, 0]], [1.36217, [3, -0.373333, 0], [3, 0.32, 0]], [1.36217, [3, -0.32, 0], [3, 0.24, 0]], [1.36218, [3, -0.24, 0], [3, 0.44, 0]], [1.36218, [3, -0.44, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([0.96, 2.08, 3.04, 3.76, 5.08])
    keys.append([[0.00872665, [3, -0.333333, 0], [3, 0.373333, 0]], [0.00872665, [3, -0.373333, 0], [3, 0.32, 0]], [0.00872665, [3, -0.32, 0], [3, 0.24, 0]], [0.00872665, [3, -0.24, 0], [3, 0.44, 0]], [0.00872665, [3, -0.44, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([0.96, 2.08, 3.04, 3.76, 5.08])
    keys.append([[-0.882092, [3, -0.333333, 0], [3, 0.373333, 0]], [-0.882092, [3, -0.373333, 0], [3, 0.32, 0]], [-0.882092, [3, -0.32, 0], [3, 0.24, 0]], [-0.882091, [3, -0.24, 0], [3, 0.44, 0]], [-0.882091, [3, -0.44, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([0.96, 2.08, 3.04, 3.76, 5.08])
    keys.append([[0.515418, [3, -0.333333, 0], [3, 0.373333, 0]], [1.31462, [3, -0.373333, 0], [3, 0.32, 0]], [1.05078, [3, -0.32, 0], [3, 0.24, 0]], [1.05078, [3, -0.24, 0], [3, 0.44, 0]], [0.515418, [3, -0.44, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([0.96, 2.08, 3.04, 3.76, 5.08])
    keys.append([[1.24099, [3, -0.333333, 0], [3, 0.373333, 0]], [2.08567, [3, -0.373333, 0], [3, 0.32, 0]], [2.08567, [3, -0.32, 0], [3, 0.24, 0]], [2.08567, [3, -0.24, 1.33158e-07], [3, 0.44, -2.44123e-07]], [1.24099, [3, -0.44, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([0.96, 2.08, 3.04, 3.76, 5.08])
    keys.append([[0.578207, [3, -0.333333, 0], [3, 0.373333, 0]], [0.578207, [3, -0.373333, 0], [3, 0.32, 0]], [0.578207, [3, -0.32, 0], [3, 0.24, 0]], [0.578207, [3, -0.24, 0], [3, 0.44, 0]], [0.578207, [3, -0.44, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([0.96, 2.08, 3.04, 3.76, 5.08])
    keys.append([[1.56619, [3, -0.333333, 0], [3, 0.373333, 0]], [1.13515, [3, -0.373333, 0.206497], [3, 0.32, -0.176998]], [0.415709, [3, -0.32, 0], [3, 0.24, 0]], [0.415709, [3, -0.24, -6.9908e-07], [3, 0.44, 1.28165e-06]], [1.56619, [3, -0.44, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([0.96, 2.08, 3.04, 3.76, 5.08])
    keys.append([[-0.14266, [3, -0.333333, 0], [3, 0.373333, 0]], [-0.248505, [3, -0.373333, 0.105845], [3, 0.32, -0.0907241]], [-1.31922, [3, -0.32, 0], [3, 0.24, 0]], [-1.31922, [3, -0.24, -7.98948e-07], [3, 0.44, 1.46474e-06]], [-0.14266, [3, -0.44, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([0.96, 2.08, 3.04, 3.76, 5.08])
    keys.append([[0.032172, [3, -0.333333, 0], [3, 0.373333, 0]], [1.18267, [3, -0.373333, -0.0644281], [3, 0.32, 0.0552241]], [1.2379, [3, -0.32, 0], [3, 0.24, 0]], [1.2379, [3, -0.24, 3.99474e-07], [3, 0.44, -7.32369e-07]], [0.032172, [3, -0.44, 0], [3, 0, 0]]])

    try:
    # uncomment the following line and modify the IP if you use this script outside Choregraphe.
    # motion = ALProxy("ALMotion", IP, 9559)
        motion = ALProxy("ALMotion", ip, port)
        motion.angleInterpolationBezier(names, times, keys)
    except BaseException, err:
        print err
